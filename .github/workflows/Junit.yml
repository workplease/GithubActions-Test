name: Junit

# on用来控制何时运行这个workflow
on:
  # 在push或者pull_request时触发这个事件workflow
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # 允许你手动在Github网页上执行该workflow
  workflow_dispatch:

# 一个workflow可以由多个job组成，可以并行或者分离运行
jobs:
  build:
    # 运行在最新版本的ubuntu镜像
    runs-on: ubuntu-latest
    steps:
      # 将你的job指向你的文件目录$GITHUB_WORKSPACE，用来运行你的脚本
      - uses: actions/checkout@v2
      # 是否缓存Maven目录，其实就是缓存依赖项
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      # 使用Java8
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8
      # 使用Maven
      - name: Build with Maven
        run: mvn -B test --file common-utils/pom.xml
      # 使用Github Action市场提供的Junit流程来执行单元测试，并且输出报告
      - uses: ashley-taylor/junit-report-annotations-action@master
        with:
          access-token: ${{ secrets.GITHUB_TOKEN }}
        if: always()
